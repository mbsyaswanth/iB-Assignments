{"ast":null,"code":"import _initializerDefineProperty from \"/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nimport { observer } from \"mobx-react\";\nimport { action, computed, observable } from \"mobx\";\nimport CartItem from \"../models/CartItem\";\nimport Product from \"../models/Product\";\nimport User from \"../models/User\";\nimport { endpoints, productFetchStatus, orderBy } from \"../constants\";\nlet storage = window.localStorage;\nlet Products = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, _dec4 = action.bound, _dec5 = action.bound, _dec6 = action.bound, _dec7 = action.bound, _dec8 = action.bound, (_class = (_temp = class Products {\n  constructor() {\n    _initializerDefineProperty(this, \"cart\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"products\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"sizes\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"orderBy\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"productFetchStatus\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"loginStatus\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"signUpStatus\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"msg\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"updateSizeFilters\", _descriptor9, this);\n\n    this.getProduct = id => {\n      return this.products[this.getIndexInProducts(id)];\n    };\n\n    this.getIndexInProducts = id => {\n      return this.products.findIndex(product => {\n        return product.id === id;\n      });\n    };\n  }\n\n  addToCart(id, size) {\n    if (this.cart.some((item, itemIndex) => {\n      if (item.itemId === id && item.size === size) {\n        item.increaseQty();\n        return true;\n      }\n\n      return false;\n    })) {\n      return;\n    } else {\n      console.log(\"in else push new item\");\n      this.cart.push(new CartItem(id, size));\n    }\n\n    storage.setItem(\"cart\", JSON.stringify(this.cart));\n  }\n\n  removeFromCart(item) {\n    this.cart.forEach((cartItem, index) => {\n      if (cartItem === item) {\n        this.cart.splice(index, 1);\n      }\n    });\n    storage.setItem(\"cart\", JSON.stringify(this.cart));\n  }\n\n  signUp(username, password, history) {\n    let user = new User(username, password);\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(endpoints.signup, options).then(res => res.json()).then(res => {\n      this.signUpStatus = res;\n\n      if (this.signUpStatus.error) {\n        this.msg = this.signUpStatus.error;\n        console.log(this.msg);\n        return;\n      }\n\n      this.msg = \"user created successfully. please login\";\n    }).catch(err => {\n      console.log(\"Ooops, error\", err.message);\n    });\n  }\n\n  login(username, password, history) {\n    let user = new User(username, password);\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(endpoints.login, options).then(res => res.json()).then(res => {\n      this.loginStatus = res;\n    }).then(res => {\n      if (this.loginStatus.error) {\n        this.msg = this.loginStatus.error;\n        console.log(this.msg);\n        return;\n      }\n\n      history.replace(\"/products\");\n    }).catch(err => {\n      console.log(\"Ooops, error\", err.message);\n    });\n  }\n\n  fetchData() {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: this.loginStatus.accessToken,\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(endpoints.products, options).then(result => {\n      if (result.ok) {\n        return result.json();\n      } else {\n        this.productFetchStatus = productFetchStatus.fail;\n      }\n    }).then(json => {\n      json.products.forEach(product => {\n        this.addProduct(product);\n      });\n      this.productFetchStatus = productFetchStatus.success;\n      let localCart = storage.getItem(\"cart\") != null ? JSON.parse(storage.getItem(\"cart\")) : [];\n      this.cart = localCart.forEach(item => {\n        return new CartItem(item.itemId, item.size);\n      });\n    }).catch(err => {\n      console.log(\"Ooops, error\", err.message);\n      this.productFetchStatus = productFetchStatus.fail;\n    });\n  }\n\n  addProduct(product) {\n    this.products.push(new Product(product));\n  }\n\n  updateOrderBy(order) {\n    this.orderBy = order;\n  }\n\n  get cartItemsCount() {\n    if (this.cart.length === 0) {\n      return 0;\n    }\n\n    return this.cart.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity;\n    }, 0);\n  }\n\n  get filteredProducts() {\n    let allProducts = this.products;\n\n    if (!this.sizes.length && this.orderBy === \"\") {\n      return allProducts;\n    }\n\n    if (this.orderBy === orderBy.lh) {\n      allProducts = this.sortInAsc(allProducts);\n    }\n\n    if (this.orderBy === orderBy.hl) {\n      allProducts = this.sortInDesc(allProducts);\n    }\n\n    if (this.sizes.length) {\n      allProducts = this.filterBySizes(allProducts);\n    }\n\n    return allProducts;\n  }\n\n  filterBySizes(allProducts) {\n    allProducts = allProducts.filter(product => {\n      // TODO: try to eliminate for\n      for (let i = 0; i < this.sizes.length; i++) {\n        if (product.availableSizes.includes(this.sizes[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n    return allProducts;\n  }\n\n  sortInDesc(allProducts) {\n    allProducts = allProducts.sort((a, b) => {\n      return b.price - a.price;\n    });\n    return allProducts;\n  }\n\n  sortInAsc(allProducts) {\n    allProducts = allProducts.sort((a, b) => {\n      return a.price - b.price;\n    });\n    return allProducts;\n  }\n\n  get filteredProductsCount() {\n    return this.filteredProducts.length;\n  }\n\n  get totalCartValue() {\n    if (this.cart.length === 0) {\n      return \"0.00\";\n    }\n\n    return this.cart.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity * this.products[this.getIndexInProducts(currentValue.itemId)].price;\n    }, 0).toFixed(2);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"cart\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"products\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"sizes\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"orderBy\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"productFetchStatus\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return productFetchStatus.loading;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"loginStatus\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"signUpStatus\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {\n      status: \"\"\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"msg\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"addToCart\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"addToCart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeFromCart\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"removeFromCart\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"signUp\", [_dec3], Object.getOwnPropertyDescriptor(_class.prototype, \"signUp\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"login\", [_dec4], Object.getOwnPropertyDescriptor(_class.prototype, \"login\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"fetchData\", [_dec5], Object.getOwnPropertyDescriptor(_class.prototype, \"fetchData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addProduct\", [_dec6], Object.getOwnPropertyDescriptor(_class.prototype, \"addProduct\"), _class.prototype), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"updateSizeFilters\", [_dec7], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return size => {\n      if (this.sizes.includes(size)) {\n        this.sizes.splice(this.sizes.indexOf(size), 1);\n        return;\n      }\n\n      this.sizes.push(size);\n      console.log(this.sizes);\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"updateOrderBy\", [_dec8], Object.getOwnPropertyDescriptor(_class.prototype, \"updateOrderBy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"cartItemsCount\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cartItemsCount\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filteredProducts\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"filteredProducts\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filteredProductsCount\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"filteredProductsCount\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"totalCartValue\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"totalCartValue\"), _class.prototype)), _class));\nexport default Products;","map":{"version":3,"sources":["/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/src/Store/index.js"],"names":["observer","action","computed","observable","CartItem","Product","User","endpoints","productFetchStatus","orderBy","storage","window","localStorage","Products","bound","getProduct","id","products","getIndexInProducts","findIndex","product","addToCart","size","cart","some","item","itemIndex","itemId","increaseQty","console","log","push","setItem","JSON","stringify","removeFromCart","forEach","cartItem","index","splice","signUp","username","password","history","user","options","method","body","headers","fetch","signup","then","res","json","signUpStatus","error","msg","catch","err","message","login","loginStatus","replace","fetchData","Authorization","accessToken","result","ok","fail","addProduct","success","localCart","getItem","parse","updateOrderBy","order","cartItemsCount","length","reduce","accumulator","currentValue","quantity","filteredProducts","allProducts","sizes","lh","sortInAsc","hl","sortInDesc","filterBySizes","filter","i","availableSizes","includes","sort","a","b","price","filteredProductsCount","totalCartValue","toFixed","loading","status","indexOf"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react\";\nimport { action, computed, observable } from \"mobx\";\n\nimport CartItem from \"../models/CartItem\";\nimport Product from \"../models/Product\";\nimport User from \"../models/User\";\nimport { endpoints, productFetchStatus, orderBy } from \"../constants\";\n\nlet storage = window.localStorage;\nclass Products {\n  @observable cart = [];\n  @observable products = [];\n  @observable sizes = [];\n  @observable orderBy = \"\";\n  @observable productFetchStatus = productFetchStatus.loading;\n  @observable loginStatus = {};\n  @observable signUpStatus = { status: \"\" };\n  @observable msg = \"\";\n\n  @action.bound addToCart(id, size) {\n    if (\n      this.cart.some((item, itemIndex) => {\n        if (item.itemId === id && item.size === size) {\n          item.increaseQty();\n          return true;\n        }\n        return false;\n      })\n    ) {\n      return;\n    } else {\n      console.log(\"in else push new item\");\n      this.cart.push(new CartItem(id, size));\n    }\n    storage.setItem(\"cart\", JSON.stringify(this.cart));\n  }\n\n  @action.bound removeFromCart(item) {\n    this.cart.forEach((cartItem, index) => {\n      if (cartItem === item) {\n        this.cart.splice(index, 1);\n      }\n    });\n    storage.setItem(\"cart\", JSON.stringify(this.cart));\n  }\n\n  @action.bound signUp(username, password, history) {\n    let user = new User(username, password);\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(endpoints.signup, options)\n      .then(res => res.json())\n      .then(res => {\n        this.signUpStatus = res;\n        if (this.signUpStatus.error) {\n          this.msg = this.signUpStatus.error;\n          console.log(this.msg);\n          return;\n        }\n        this.msg = \"user created successfully. please login\";\n      })\n      .catch(err => {\n        console.log(\"Ooops, error\", err.message);\n      });\n  }\n\n  @action.bound login(username, password, history) {\n    let user = new User(username, password);\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(endpoints.login, options)\n      .then(res => res.json())\n      .then(res => {\n        this.loginStatus = res;\n      })\n      .then(res => {\n        if (this.loginStatus.error) {\n          this.msg = this.loginStatus.error;\n          console.log(this.msg);\n          return;\n        }\n        history.replace(\"/products\");\n      })\n      .catch(err => {\n        console.log(\"Ooops, error\", err.message);\n      });\n  }\n\n  @action.bound fetchData() {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Authorization: this.loginStatus.accessToken,\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(endpoints.products, options)\n      .then(result => {\n        if (result.ok) {\n          return result.json();\n        } else {\n          this.productFetchStatus = productFetchStatus.fail;\n        }\n      })\n      .then(json => {\n        json.products.forEach(product => {\n          this.addProduct(product);\n        });\n        this.productFetchStatus = productFetchStatus.success;\n        let localCart =\n          storage.getItem(\"cart\") != null\n            ? JSON.parse(storage.getItem(\"cart\"))\n            : [];\n\n        this.cart = localCart.forEach(item => {\n          return new CartItem(item.itemId, item.size);\n        });\n      })\n      .catch(err => {\n        console.log(\"Ooops, error\", err.message);\n        this.productFetchStatus = productFetchStatus.fail;\n      });\n  }\n\n  @action.bound addProduct(product) {\n    this.products.push(new Product(product));\n  }\n\n  @action.bound updateSizeFilters = size => {\n    if (this.sizes.includes(size)) {\n      this.sizes.splice(this.sizes.indexOf(size), 1);\n      return;\n    }\n    this.sizes.push(size);\n    console.log(this.sizes);\n  };\n\n  @action.bound updateOrderBy(order) {\n    this.orderBy = order;\n  }\n\n  @computed get cartItemsCount() {\n    if (this.cart.length === 0) {\n      return 0;\n    }\n    return this.cart.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity;\n    }, 0);\n  }\n\n  @computed get filteredProducts() {\n    let allProducts = this.products;\n    if (!this.sizes.length && this.orderBy === \"\") {\n      return allProducts;\n    }\n\n    if (this.orderBy === orderBy.lh) {\n      allProducts = this.sortInAsc(allProducts);\n    }\n\n    if (this.orderBy === orderBy.hl) {\n      allProducts = this.sortInDesc(allProducts);\n    }\n\n    if (this.sizes.length) {\n      allProducts = this.filterBySizes(allProducts);\n    }\n    return allProducts;\n  }\n\n  filterBySizes(allProducts) {\n    allProducts = allProducts.filter(product => {\n      // TODO: try to eliminate for\n      for (let i = 0; i < this.sizes.length; i++) {\n        if (product.availableSizes.includes(this.sizes[i])) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return allProducts;\n  }\n\n  sortInDesc(allProducts) {\n    allProducts = allProducts.sort((a, b) => {\n      return b.price - a.price;\n    });\n    return allProducts;\n  }\n\n  sortInAsc(allProducts) {\n    allProducts = allProducts.sort((a, b) => {\n      return a.price - b.price;\n    });\n    return allProducts;\n  }\n\n  @computed get filteredProductsCount() {\n    return this.filteredProducts.length;\n  }\n\n  @computed get totalCartValue() {\n    if (this.cart.length === 0) {\n      return \"0.00\";\n    }\n    return this.cart\n      .reduce((accumulator, currentValue) => {\n        return (\n          accumulator +\n          currentValue.quantity *\n            this.products[this.getIndexInProducts(currentValue.itemId)].price\n        );\n      }, 0)\n      .toFixed(2);\n  }\n\n  getProduct = id => {\n    return this.products[this.getIndexInProducts(id)];\n  };\n\n  getIndexInProducts = id => {\n    return this.products.findIndex(product => {\n      return product.id === id;\n    });\n  };\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}