{"ast":null,"code":"import _initializerDefineProperty from \"/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nimport { observer } from \"mobx-react\";\nimport { action, computed, observable } from \"mobx\";\nimport CartItem from \"../models/CartItem\";\nimport Product from \"../models/Product\";\nlet Products = (_class = (_temp = class Products {\n  constructor() {\n    _initializerDefineProperty(this, \"cart\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"products\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"sizes\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"orderBy\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"addToCart\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"removeFromCart\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"addProduct\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"updateSizeFilters\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"updateOrderBy\", _descriptor9, this);\n\n    this.getProduct = id => {\n      return this.products[this.getIndexInProducts(id)];\n    };\n\n    this.getIndexInProducts = id => {\n      return this.products.findIndex(product => {\n        return product.id === id;\n      });\n    };\n\n    this.getIndexInCart = id => {\n      return this.cart.findIndex(item => {\n        return item.itemId === id;\n      });\n    };\n  }\n\n  get cartItemsCount() {\n    if (this.cart.length === 0) {\n      return 0;\n    }\n\n    return this.cart.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity;\n    }, 0);\n  }\n\n  get filteredProducts() {\n    let allProducts = this.products;\n\n    if (!this.sizes.length && this.orderBy === \"\") {\n      return allProducts;\n    }\n\n    console.log(this.orderBy);\n\n    if (this.orderBy === \"lh\") {\n      console.log(\"in lh\");\n      allProducts = allProducts.sort((a, b) => {\n        return a.price - b.price;\n      });\n    }\n\n    if (this.orderBy === \"hl\") {\n      allProducts = allProducts.sort((a, b) => {\n        return b.price - a.price;\n      });\n    }\n\n    if (this.sizes.length) {\n      allProducts = allProducts.filter(product => {\n        for (let i = 0; i < this.sizes.length; i++) {\n          if (product.availableSizes.includes(this.sizes[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n\n    return allProducts;\n  }\n\n  get filteredProductsCount() {\n    return this.filteredProducts.length;\n  }\n\n  get totalCartValue() {\n    if (this.cart.length === 0) {\n      return \"0.00\";\n    }\n\n    return this.cart.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity * this.products[this.getIndexInProducts(currentValue.itemId)].price;\n    }, 0);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"cart\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"products\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"sizes\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"orderBy\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"addToCart\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (id, size) => {\n      let index = this.getIndexInCart(id);\n\n      if (index >= 0) {\n        this.cart.forEach((item, itemIndex) => {\n          if (item.itemId === id) {\n            console.log(\"same id found\", itemIndex);\n\n            if (item.size === size) {\n              console.log(\"increasing qty\");\n              item.increaseQty();\n            } else if (itemIndex === this.cart.length - 1) {\n              this.cart.push(new CartItem(id, size));\n            }\n          }\n        });\n      } // console.log(\"adding to cart\", index);\n      // if (index >= 0) {\n      //   if (this.cart[index].size === size) {\n      //     console.log(\"increasing qty\");\n      //     this.cart[index].increaseQty();\n      //     return;\n      //   }\n      // }\n      // console.log(\"pusing as new item\");\n      else {\n          console.log(\"in else push new item\");\n          this.cart.push(new CartItem(id, size));\n        }\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"removeFromCart\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return item => {\n      this.cart.forEach((cartItem, index) => {\n        if (cartItem === item) {\n          this.cart.splice(index, 1);\n        }\n      });\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"addProduct\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return obj => {\n      this.products.push(new Product(obj));\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"updateSizeFilters\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return size => {\n      if (this.sizes.includes(size)) {\n        this.sizes.splice(this.sizes.indexOf(size), 1);\n        return;\n      }\n\n      this.sizes.push(size);\n    };\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"updateOrderBy\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return order => {\n      this.orderBy = order;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"cartItemsCount\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cartItemsCount\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filteredProducts\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"filteredProducts\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filteredProductsCount\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"filteredProductsCount\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"totalCartValue\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"totalCartValue\"), _class.prototype)), _class);\nexport default Products;","map":{"version":3,"sources":["/home/ib_admin/Practice/iB-Assignments/assignment-10/Mobx-Shopping-Site/src/Store/index.js"],"names":["observer","action","computed","observable","CartItem","Product","Products","getProduct","id","products","getIndexInProducts","findIndex","product","getIndexInCart","cart","item","itemId","cartItemsCount","length","reduce","accumulator","currentValue","quantity","filteredProducts","allProducts","sizes","orderBy","console","log","sort","a","b","price","filter","i","availableSizes","includes","filteredProductsCount","totalCartValue","size","index","forEach","itemIndex","increaseQty","push","cartItem","splice","obj","indexOf","order"],"mappings":"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","sourcesContent":["import { observer } from \"mobx-react\";\nimport { action, computed, observable } from \"mobx\";\n\nimport CartItem from \"../models/CartItem\";\nimport Product from \"../models/Product\";\n\nclass Products {\n  @observable cart = [];\n  @observable products = [];\n  @observable sizes = [];\n  @observable orderBy = \"\";\n\n  @action addToCart = (id, size) => {\n    let index = this.getIndexInCart(id);\n    if (index >= 0) {\n      this.cart.forEach((item, itemIndex) => {\n        if (item.itemId === id) {\n          console.log(\"same id found\", itemIndex);\n          if (item.size === size) {\n            console.log(\"increasing qty\");\n            item.increaseQty();\n          } else if (itemIndex === this.cart.length - 1) {\n            this.cart.push(new CartItem(id, size));\n          }\n        }\n      });\n    }\n    // console.log(\"adding to cart\", index);\n    // if (index >= 0) {\n    //   if (this.cart[index].size === size) {\n    //     console.log(\"increasing qty\");\n    //     this.cart[index].increaseQty();\n    //     return;\n    //   }\n    // }\n    // console.log(\"pusing as new item\");\n    else {\n      console.log(\"in else push new item\");\n      this.cart.push(new CartItem(id, size));\n    }\n  };\n\n  @action removeFromCart = item => {\n    this.cart.forEach((cartItem, index) => {\n      if (cartItem === item) {\n        this.cart.splice(index, 1);\n      }\n    });\n  };\n\n  @action addProduct = obj => {\n    this.products.push(new Product(obj));\n  };\n  //TODO: make constants for sizes, orderby\n  @action updateSizeFilters = size => {\n    if (this.sizes.includes(size)) {\n      this.sizes.splice(this.sizes.indexOf(size), 1);\n      return;\n    }\n    this.sizes.push(size);\n  };\n\n  @action updateOrderBy = order => {\n    this.orderBy = order;\n  };\n\n  @computed get cartItemsCount() {\n    if (this.cart.length === 0) {\n      return 0;\n    }\n    return this.cart.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.quantity;\n    }, 0);\n  }\n\n  @computed get filteredProducts() {\n    let allProducts = this.products;\n    if (!this.sizes.length && this.orderBy === \"\") {\n      return allProducts;\n    }\n    console.log(this.orderBy);\n    if (this.orderBy === \"lh\") {\n      console.log(\"in lh\");\n      allProducts = allProducts.sort((a, b) => {\n        return a.price - b.price;\n      });\n    }\n    if (this.orderBy === \"hl\") {\n      allProducts = allProducts.sort((a, b) => {\n        return b.price - a.price;\n      });\n    }\n    if (this.sizes.length) {\n      allProducts = allProducts.filter(product => {\n        for (let i = 0; i < this.sizes.length; i++) {\n          if (product.availableSizes.includes(this.sizes[i])) {\n            return true;\n          }\n        }\n        return false;\n      });\n    }\n    return allProducts;\n  }\n\n  @computed get filteredProductsCount() {\n    return this.filteredProducts.length;\n  }\n\n  @computed get totalCartValue() {\n    if (this.cart.length === 0) {\n      return \"0.00\";\n    }\n    return this.cart.reduce((accumulator, currentValue) => {\n      return (\n        accumulator +\n        currentValue.quantity *\n          this.products[this.getIndexInProducts(currentValue.itemId)].price\n      );\n    }, 0);\n  }\n\n  getProduct = id => {\n    return this.products[this.getIndexInProducts(id)];\n  };\n\n  getIndexInProducts = id => {\n    return this.products.findIndex(product => {\n      return product.id === id;\n    });\n  };\n\n  getIndexInCart = id => {\n    return this.cart.findIndex(item => {\n      return item.itemId === id;\n    });\n  };\n}\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}